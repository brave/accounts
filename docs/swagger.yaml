definitions:
  controllers.PasswordFinalizeResponse:
    properties:
      authToken:
        description: Authentication token
        type: string
    type: object
  controllers.RegistrationRecord:
    properties:
      envelope:
        type: string
      maskingKey:
        type: string
      publicKey:
        type: string
    required:
    - envelope
    - maskingKey
    - publicKey
    type: object
  controllers.RegistrationRequest:
    properties:
      blindedMessage:
        type: string
    required:
    - blindedMessage
    type: object
  controllers.RegistrationResponse:
    properties:
      evaluatedMessage:
        type: string
      pks:
        type: string
    type: object
  controllers.ValidateTokenResponse:
    description: Response containing validated token details
    properties:
      accountId:
        description: UUID of the account
        type: string
      email:
        description: Email address associated with the account
        type: string
      sessionId:
        description: UUID of the session associated with the account
        type: string
    type: object
  controllers.VerifyInitRequest:
    description: Request to initialize email verification
    properties:
      email:
        description: Email address to verify
        example: test@example.com
        type: string
    required:
    - email
    type: object
  controllers.VerifyInitResponse:
    description: Response containing verification check token
    properties:
      verificationToken:
        description: JWT token for checking verification status
        type: string
    type: object
  controllers.VerifyResultRequest:
    description: Request for getting auth token after verification
    properties:
      wait:
        description: Whether to wait for verification to complete
        type: boolean
    type: object
  controllers.VerifyResultResponse:
    description: Response containing auth token
    properties:
      authToken:
        description: JWT auth token, null if verification incomplete or if password
          setup is required
        type: string
      verified:
        description: Email verification status
        type: boolean
    type: object
  datastore.Session:
    properties:
      createdAt:
        description: Session creation timestamp
        type: string
      id:
        description: Session UUID
        type: string
      sessionName:
        description: Optional session name
        type: string
    type: object
  util.ErrorResponse:
    description: Standard error response
    properties:
      error:
        description: Error message
        type: string
      status:
        description: HTTP status code
        type: integer
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact: {}
  title: Brave Accounts Service
paths:
  /v2/accounts/change_pwd/finalize:
    post:
      consumes:
      - application/json
      description: Complete the password change process and return auth token
      parameters:
      - description: Bearer + auth token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Registration record
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.RegistrationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.PasswordFinalizeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Finalize password setup
      tags:
      - Accounts
  /v2/accounts/change_pwd/init:
    post:
      consumes:
      - application/json
      description: Start the password change process using OPAQUE protocol
      parameters:
      - description: Bearer + auth token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Registration request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.RegistrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.RegistrationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Initialize password change
      tags:
      - Accounts
  /v2/accounts/setup/finalize:
    post:
      consumes:
      - application/json
      description: Complete the password setup process and return auth token
      parameters:
      - description: Bearer + verification token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Registration record
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.RegistrationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.PasswordFinalizeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Finalize password setup
      tags:
      - Accounts
  /v2/accounts/setup/init:
    post:
      consumes:
      - application/json
      description: Start the password setup process using OPAQUE protocol
      parameters:
      - description: Bearer + verification token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Registration request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.RegistrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.RegistrationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Initialize password setup
      tags:
      - Accounts
  /v2/auth/validate:
    get:
      description: Validates an auth token and returns session details
      parameters:
      - description: Bearer + auth token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.ValidateTokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Validate auth token
      tags:
      - Auth
  /v2/sessions:
    get:
      description: Lists all active sessions for the authenticated account
      parameters:
      - description: Bearer + auth token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/datastore.Session'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: List sessions
      tags:
      - Sessions
  /v2/sessions/{id}:
    delete:
      description: Deletes a specific session by ID
      parameters:
      - description: Bearer + auth token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Session ID (UUID)
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Delete session / log out
      tags:
      - Sessions
  /v2/verify/complete:
    get:
      description: Completes the email verification process
      parameters:
      - description: Verification ID
        in: query
        name: verify_id
        required: true
        type: string
      - description: Verification code
        in: query
        name: verify_code
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Email verification successful
          schema:
            type: string
        "400":
          description: Missing/invalid verification parameters
          schema:
            type: string
        "404":
          description: Verification not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Complete email verification
      tags:
      - Email verification
  /v2/verify/init:
    post:
      consumes:
      - application/json
      description: Starts email verification process by sending a verification email
      parameters:
      - description: Verification request params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.VerifyInitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.VerifyInitResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Initialize email verification
      tags:
      - Email verification
  /v2/verify/result:
    post:
      consumes:
      - application/json
      description: |-
        Exchanges a verify check token for an auth token after successful verification.
        If the wait option is set to true, the server will up to 20 seconds for verification. Feel free
        to call this endpoint repeatedly to wait for verification.
      parameters:
      - description: Bearer + verification token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Auth token request params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.VerifyResultRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.VerifyResultResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Query result of verification
      tags:
      - Email verification
swagger: "2.0"
